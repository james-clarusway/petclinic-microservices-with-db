pipeline {
    agent any
    environment {
    //     // PATH=sh(script:"echo $PATH:/usr/local/bin:$HOME/bin", returnStdout:true).trim()
         APP_NAME="petclinic"
    //     // APP_REPO_NAME="clarusway-repo/petclinic-app-qa"
    //     // AWS_ACCOUNT_ID=sh(script:'export PATH="$PATH:/usr/local/bin" && aws sts get-caller-identity --query Account --output text', returnStdout:true).trim()
    //     // AWS_REGION="us-east-1"
    //     // ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
    }
     stages {
        stage('Prepare Tags for Docker Images') {
            steps {
                script {
                    env.myvar="myval"
                }
                    sh "./jenkins/tag.sh"
                    sh ". ./jenkins/tag.sh"
            }
        }
        stage('test') {
            steps  {
                    sh "./jenkins/tag.sh"
                    sh ". ./jenkins/tag.sh"
            }
        }

        // stage('Build App Docker Images') {
        //     steps {
        //         echo 'Building App Dev Images'
        //         sh ". ./jenkins/build-qa-docker-images-for-ecr.sh"
        //         sh 'docker image ls'
        //     }
        // }
        // stage('Push Images to ECR Repo') {
        //     steps {
        //         echo "Pushing ${APP_NAME} App Images to ECR Repo"
        //         sh ". ./jenkins/push-qa-docker-images-to-ecr.sh"
        //     }
        // }
        // stage('Deploy App on Kubernetes Cluster'){
        //     steps {
        //         echo 'Deploying App on Kubernetes Cluster'
        //         sh '. ./jenkins/deploy_app_on_qa_environment.sh'
        //     }
        // }
    }
    // post {
    //     always {
    //         echo 'Deleting all local images'
    //         sh 'docker image prune -af'
    //     }
    // }
}